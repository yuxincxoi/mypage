import { imagePaths } from "../imagePaths";

export const projectStatics = {
  project_1: {
    id: 1,
    title: "Eco Vision",
    subTitle: `야생동물 모니터링 및
출몰 알림 서비스`,
    type: "team",
    stack: [
      "Vue.js",
      "TypeScript",
      "TailwindCSS",
      "Python",
      "PyTorch",
      "Flask",
    ],
    exp: `머신러닝을 학습하기 위해 진행된 프로젝트입니다.
사용자가 야생 동물 출몰 제보를 하면, 머신러닝을 활용해 야생 동물의 종을 식별하고
해당 지역을 중심으로 위험 반경에 위치한 사용자들에게 출몰 알림이 전송되도록 기획한 서비스입니다.
* 머신러닝을 통한 동물 종 식별까지를 목표로 구현했습니다.`,
    img: imagePaths.project_1,
    function: [
      ["동물종 식별 페이지", "출몰한 동물의 사진을 업로드합니다."],
      [
        "동물종 식별 페이지",
        `동물의 종을 식별하고, 위해동물로 분류될 경우 '제보하기' 버튼이 활성화됩니다.
        '제보하기' 버튼을 누르면 위치 제보 페이지로 이동합니다.`,
      ],
      [
        "위치 제보 페이지",
        `출몰 지역의 키워드나 주소를 통해 검색하면 마커가 표시됩니다.
        해당 장소의 마커를 클릭하면 마커를 중심으로한 위험 반경이 표시되고, 'Report' 버튼이 활성화됩니다. 
        'Report' 버튼을 누르면 제보가 완료되며, 위험 반경 지역에 위치한 사용자들에게 알림이 전송됩니다.`,
      ],
      "📍 위치 제보: 출몰 지역의 키워드나 장소를 검색하면 해당 장소에 마커가 표시됩니다. 마커를 클릭하면 해당 장소를 중심으로한 위험 반경이 표시되고 제보하기 버튼이 활성화됩니다. 제보하기 버튼을 누르면 위험 반경 지역의 사용자들에게 알림이 전송됩니다. 기존 제보된 출몰 정보는 표 형태로 제공하여 출몰 현황을 쉽게 확인 가능합니다.",
      "📊 통계: 실시간 데이터 수집을 통해 야생동물 출몰 패턴 분석하고 멸종위기종 및 야생동물 보호 연구를 위한 데이터로 제공됩니다.",
      "담당기능: 위치 제보 페이지 제작 - 장소 검색 기능 구현, 지도에 장소 및 위험 반경 표시",
      "담당기능: 작업 개요서 작성",
      "담당기능: UI 설계 및 디자인",
    ],
    character: [
      "카카오지도 API를 활용 - 야생동물 출몰위치 및 위험반경 시각화",
      "머신러닝 기능이 통합된 웹 서비스를 개발",
      "Tailwind CSS와 Figma를 활용하여 디자인 시스템을 구축하고 일관된 UI를 설계했습니다.",
      "서버 통신을 통해 사용자 제보 데이터를 처리하고 관련 정보를 실시간으로 제공하도록 구현했습니다.",
      "모바일 퍼스트",
      "각종 다이어그램",
      "멀티레포",
    ],
    troubleShooting: {
      trouble: "프로젝트 1: 이렇고 저런 문제가 있었습니다.",
      shooting:
        "프로젝트 1: 이렇고 저런 문제를 해결하기 위해 이런 방법들을 시도했습니다. 그래서 이러한 변화가 생겼습니다.",
      result:
        "프로젝트 1: 문제를 해결하면서 이런 점을 알게되었고 배우게 된 계기가 되었습니다.",
    },
    comment:
      "프로젝트 1: 회고입니다. 이 프로젝트를 통해 이러한 것들을 느꼈고 이렇고저렇습니다.",
  },
  project_2: {
    id: 2,
    title: "꿈 자판기",
    subTitle: "mini ERP",
    type: "team",
    stack: [
      "HTML",
      "JavaScript",
      "TypeScript",
      "TailwindCSS",
      "Express.js",
      "SQLite3",
    ],
    exp: `사용자는 꿈 자판기에서 원하는 꿈을 구매하고, 관리자는 제품의 재고와 매출을 관리할 수 있도록 한 웹 애플리케이션입니다. 
    세상에 존재하지 않는 자판기를 주제로 만든 mini ERP 프로젝트입니다.`,
    img: imagePaths.project_2,
    function: [
      [
        "사용자 페이지",
        `잔액을 충전하고, 원하는 제품을 장바구니에 담아 꿈을 구매합니다.`,
      ],
      ["관리자 페이지", "제품을 조회하고 추가, 수정, 삭제할 수 있습니다."],
      [
        "관리자 페이지",
        "'보고서 출력' 버튼을 통해 가장 많이 팔린 제품과 총 판매 금액을 확인할 수 있습니다.",
      ],
      "담당기능: 구매하기 버튼 이벤트 관련 로직 처리 - 총액 계산 및 출력, 잔액 계산 및 저장, 잔액 출력",
      "담당기능: 초기 데이터베이스 구축",
    ],
    character: [
      "CRUD 기능 구현 - 장바구니 및 제품 데이터 조회 및 추가, 수정, 삭제",
      "Express.js를 활용한 RESTful API 구현으로 클라이언트-서버 간 효율적인 데이터 교환을 구현했습니다.",
      "SQLite3를 활용한 관계형 데이터베이스 설계 및 초기 구축을 통해 데이터의 무결성과 효율성을 보장했습니다.",
      "Tailwind CSS",
      "각종 다이어그램과 ERD",
      "사용자와 관리자 기능을 분리하여 제품 구매와 재고/매출 관리가 가능한 mini ERP 시스템을 구축했습니다.",
    ],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment:
      "꿈 자판기라는 프로젝트를 처음으로 팀 단위로 작업을 진행해보게 되었다. 모두 같은 조건에 같은 글을 읽어도 그것을 이해하고 머릿속에 그려내는 바가 다 다르다는 점이 새삼 신기했다. 그런 덕분에 각자 가지고있는 수많은 아이디어를 내놓을수 있지 않았나 싶다. 우리는 나름의 설계를 했다. 해야할 일들을 이슈 단위로 나누어놓고 역할분담을 해서 작업을 시작했다. 하지만 항상 생각한 바대로 역시나 설계엔 끝이 없었다. 작업을 진행해가면서 설계의 부족으로 가장 불편했던 점들은 설계할 때에 팀원들과 작업이 겹치는 부분도 고려하지 못했다는 것과 요소들의 변수명, 함수와 그 기능, 받을 인자와 리턴값 정도는 정하고 진행을 했어야했는데라는 것이었다. 절대로 팀이 아니었다면 생각지도 못했을 것들이다. ‘이정도의 설계만 하고 진행했어도 순식간에 끝낼 수 있을 것 같은데’ 라는 생각을 많이 했던 것 같다. 남은 부분들을 진행하기에 앞서 이런 부분들을 보완하여 설계해서 작업을 진행해보고싶다.(진행중) 팀이어서 든든했고 팀이어서 성장할 수 있었던 것 같다.",
  },
  project_3: {
    id: 3,
    title: "크랩크랩 버거",
    subTitle: "ERP",
    type: "team",
    stack: ["Nest.js", "Nest.js", "TypeScript", "MongoDB", "TailwindCSS"],
    exp: `'만약 스폰지밥 속 집게리아가 실제로 존재한다면?'이라는 발상에서 시작된 햄버거 구매 및 재고 관리 ERP 시스템입니다.
    이 프로젝트는 mini 프로젝트 ‘꿈 자판기’를 기반으로 확장하여 제작했습니다.`,
    img: imagePaths.project_3,
    function: [
      ["로그인 페이지", ""],
      ["회원가입 페이지", ""],
      [
        "사용자 페이지",
        "빵, 패티, 소스, 사이드, 음료를 선택하여 장바구니에 담아 버거를 주문합니다.",
      ],
      [
        "마이 페이지",
        "로그인 정보, 비밀번호 변경 및 주문내역을 확인할 수 있습니다.",
      ],
      [
        "관리자 페이지 - 재고 조회",
        "제품 발주를 넣거나 제품 정보를 수정할 수 있습니다.",
      ],
      [
        "관리자 페이지 - 유통기한 관리",
        `유통기한을 조회하고 폐기할 제품을 데이터에 반영하여 관리합니다.
        유통기한 순으로 제품이 정렬되어 표시됩니다.`,
      ],
      ["관리자 페이지 - 매출 조회", ""],
      ["관리자 페이지 - 회원 조회", "회원 정보를 조회하고 권한을 설정합니다."],
      [
        "관리자 페이지 - 인사이트",
        "최다 방문자, 사용자 평균 체류 시간, 최다 주문내역 등의 통계를 확인할 수 있습니다.",
      ],
      [
        "담당기능: 컴포넌트 제작 - input,로그인 정보, 사용자 네비게이션, 관리자 네비게이션",
      ],
      ["담당기능: 사용자 페이지 제작 : 구매 및 구매 관련 재고처리 로직", ""],
      ["담당기능: 설계도 제작 - ERD, 메뉴 구조도", ""],
      ["담당기능: UI 설계 및 디자인", ""],
      ["담당기능: 초기 데이터베이스 구축", ""],
      ["담당기능: 초기 스키마 정의", ""],
      ["담당기능: 로고 제작", ""],
    ],
    character: [
      "JWT 기반의 인증 시스템 구현(사용자 인증, 권한 관리 및 보호된 페이지 접근 제어) - 보안 강화",
      "기능 단위의 컴포넌트 설계 - 재사용성과 유지보수성을 높임",
      "MongoDB를 활용한 데이터베이스 설계 및 초기 구축으로 효율적인 데이터 관리를 구현했습니다.",
      "ERD 설계 - 제품 및 주문 관리에 최적화된 데이터 구조 설계",
      "CRUD",
      "서버, REST API",
      "스켈레톤",
      "AWS",
      "각종 다이어그램, 기능명세서 IA",
      "검색, 정렬 기능",
      "로그",
      "서버 3개(fe, be, db)",
      "Tailwind CSS",
    ],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_4: {
    id: 4,
    title: "꽃갈피",
    subTitle: "교환 독서",
    type: "team",
    stack: ["Angular", "MySQL", "Express.js"],
    exp: `프로젝트 4: 프로젝트 설명입니다. 이렇고저런 프로젝트이고 이렇고저래서 만들었습니다.`,
    img: ["사진1"],
    function: [
      "프로젝트 4: 기능 1에 대한 상세 설명을 여기에 작성합니다. 어떤 문제를 해결하고 어떤 가치를 제공하는지 설명합니다.",
      "프로젝트 4: 기능 2에 대한 상세 설명을 여기에 작성합니다. 어떤 문제를 해결하고 어떤 가치를 제공하는지 설명합니다.",
      "프로젝트 4: 기능 3에 대한 상세 설명을 여기에 작성합니다. 어떤 문제를 해결하고 어떤 가치를 제공하는지 설명합니다.",
    ],
    character: [
      "프로젝트 4: 특징 1에 대한 상세 설명을 여기에 작성합니다. 프로젝트의 독특한 점이나 혁신적인 부분을 강조합니다.",
      "프로젝트 4: 특징 2에 대한 상세 설명을 여기에 작성합니다. 프로젝트의 독특한 점이나 혁신적인 부분을 강조합니다.",
    ],
    troubleShooting: {
      trouble: "프로젝트 4: 이렇고 저런 문제가 있었습니다.",
      shooting:
        "프로젝트 4: 이렇고 저런 문제를 해결하기 위해 이런 방법들을 시도했습니다. 그래서 이러한 변화가 생겼습니다.",
      result:
        "프로젝트 4: 문제를 해결하면서 이런 점을 알게되었고 배우게 된 계기가 되었습니다.",
    },
    comment:
      "프로젝트 4: 회고입니다. 이 프로젝트를 통해 이러한 것들을 느꼈고 이렇고저렇습니다.",
  },
  project_5: {
    id: 5,
    title: `포트폴리오
사이트`,
    subTitle: "포트폴리오 사이트",
    type: "personal",
    stack: ["React", "TypeScript", "TailwindCSS"],
    exp: `최유진의 포트폴리오 사이트입니다.`,
    img: ["사진1", "사진2", "사진3"],
    function: ["기능"],
    character: ["특징"],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_6: {
    id: 6,
    title: "I LIKE 짬뽕",
    subTitle: "짬뽕 지도",
    type: "personal",
    stack: ["React", "TypeScript", "Express.js", "TailwindCSS", "MongoDB"],
    exp: `I LIKE 짬뽕은 전국의 짬뽕 맛집을 찾고, 나만의 맛집 리스트를 관리할 수 있도록 만든 웹 애플리케이션입니다.
    지도를 활용하여 주변의 짬뽕집을 검색하고, 좋아요 기능을 통해 자신만의 리스트를 만들어 관리할 수 있습니다.`,
    img: imagePaths.project_6,
    function: [
      ["로그인 페이지", ""],
      ["회원가입 페이지", ""],
      [
        "메인 페이지",
        `사용자가 짬뽕집을 검색하면 짬뽕집 리스트가 지도에 표시됩니다.
저장하고싶은 짬뽕집은 나만의 리스트에 추가할 수 있습니다.`,
      ],
      [
        "좋아요 페이지",
        "내가 저장해놓은 짬뽕집 리스트와 정보를 확인할 수 있습니다.",
      ],
      [
        "마이페이지",
        `생성된 계정의 개인정보를 확인하고 관리합니다.
이름 및 비밀번호를 변경할 수 있습니다.`,
      ],
    ],
    character: [
      "카카오지도 API를 활용 - 위치 기반의 짬뽕 맛집 정보 시각화",
      "JWT 기반의 인증 시스템 구현(사용자 인증 관리 및 보호된 페이지 접근 제어) - 보안 강화",
      "기능 단위의 컴포넌트 설계 - 재사용성과 유지보수성을 높임",
      "CRUD 기능 구현 - 사용자의 맛집 데이터 조회, 추가, 삭제 및 개인정보 수정",
      "REST API 기반 서버 통신을 통해 프론트엔드와 백엔드 간 데이터 흐름을 원활하게 처리했습니다.",
      "MongoDB를 활용하여 사용자 데이터와 맛집 정보를 효율적으로 관리했습니다.",
      "Tailwind CSS로 빠르게 스타일을 구성하고, 반응형 디자인을 통해 다양한 디바이스에서도 일관된 사용자 경험을 제공했습니다.",
      "AWS EC2와 S3, Route 53 도메인 연결을 통해 실 서비스처럼 운영 가능한 환경을 구축했습니다.",
    ],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment:
      "지도 API를 활용해보고 싶었고, jwt를 통한 인증 관리를 알아보고자 진행했던 프로젝트. 카카오 지도 API는 처음 사용해보았는데 생각보다 많은 기능들이 있었다. jwt 인증 관리는 지난번 ERP 프로젝트에서 다른 팀원이 맡은 기능이었는데 나도 해보고싶었다. 절차는 생각보다 어렵징 않게 진행할 수 있었다. 유효성검사. 앱 개발도 진행하고싶은. 리뷰 크롤링을 통해 별점과 리뷰를 달아놓고 애플리케이션 자체적으로 추가적으로 관리를 하고싶었으나... 또한 맵기 점수도 자체적으로 관리를 하고 싶었으나... 맵부심 점수 추후에는 맵부심 점수와 짬뽕집 맵기 점수를 바탕으로 짬뽕집 추천해주고싶다. 짬뽕집만 검색이 되게끔 지도 관리. 더 나아가 지역 커뮤니티 활성화",
  },
  project_7: {
    id: 7,
    title: "Cota",
    subTitle: "코드 타자연습 게임",
    type: "personal",
    stack: ["HTML", "CSS", "JavaScript", "Express.js"],
    exp: `코드 타자연습 게임으로, 주어진 코드를 빠르고 정확하게 입력하는 게임입니다.
    이 게임을 통해 보다 빠른 작업 속도를 기르고, 새로운 프로그래밍 문법을 학습할 수 있습니다.`,
    img: imagePaths.project_7,
    function: [
      [
        "시작 페이지",
        "'게임 방법' 버튼을 통해 게임 방법을 확인하고 'START' 버튼을 눌러 게임을 시작합니다.",
      ],
      [
        "메인 페이지",
        `게임이 시작되면 3개의 하트가 주어지며, 시간이 자동으로 카운트 됩니다.
        코드와 다르게 입력할 때마다 하트 하나가 사라집니다.
        주어진 시간 내에 코드를 입력하지 못하면 점수가 차감됩니다.`,
      ],
      [
        "Game Over",
        "하트가 모두 사라지거나, 점수가 0점이 되면 게임이 끝납니다.",
      ],
      [
        "Game Over",
        "완벽하게 코드를 타이핑해서 게임을 끝마쳤을 때의 엔딩 화면입니다.",
      ],
      "⏱️ 타이머: 게임이 시작되면 시간이 자동으로 카운트 됩니다.",
      "❤️ 하트: 게임이 시작되면 3개의 하트가 주어집니다. 코드와 다르게 입력할 때마다 하트 하나가 사라집니다.",
      "🏆 점수: 주어진 시간 내에 코드를 입력하지 못하면 점수가 차감됩니다.",
      "💀 게임 끝: 하트가 모두 사라지거나, 점수가 0점이 되면 게임이 끝납니다.",
    ],
    character: [
      "Express.js를 활용한 서버 구현으로 게임 데이터를 관리하고 제공했습니다.",
      "REST API",
    ],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_8: {
    id: 8,
    title: "Chord Clip",
    subTitle: "3도화음 가이드",
    type: "personal",
    stack: ["React", "TypeScript", "TailwindCSS"],
    exp: `사용자가 노래를 녹음하고, 그것을 기준으로 3도 위의 음을 생성하여 재생하는 웹 애플리케이션입니다.
    3도 화음의 가이드가 되어 화음 연습에 도움이 되고자 만들었습니다.`,
    img: imagePaths.project_8,
    function: [
      ["인트로", ""],
      ["메인 페이지", "버튼을 눌러 사용자의 노래를 녹음합니다."],
      ["녹음 중", ""],
      [
        "재생 및 저장",
        `녹음된 음을 1도음으로 설정하여 이에 맞는 3도 위의 음을 생성하고 재생합니다.
        음원은 mp4 파일로 저장 가능합니다.`,
      ],
    ],
    character: [
      "Jungle 라이브러리 활용 - 실시간 오디오 신호 처리 및 3도 화음 생성 기능 구현",
      "Tailwind CSS를 활용한 반응형 디자인으로 다양한 기기에서 최적화된 사용자 경험을 제공했습니다.",
      "m4a 파일 저장 기능 - 음원 다운로드 가능",
    ],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_9: {
    id: 9,
    title: "Tone-deaf Mic",
    subTitle: "음치 마이크",
    type: "personal",
    stack: ["Next.js", "TypeScript", "TailwindCSS"],
    exp: `음성 변조 기능을 활용한 음치 마이크입니다.
    이 마이크로 노래를 하면 누구든 음치가 될 수 있습니다!`,
    img: imagePaths.project_9,
    function: [
      [
        "메인 화면",
        `마이크의 전원을 켜고 피치를 조절하여 음성을 변조합니다.
        변조된 음성은 실시간으로 출력됩니다.`,
      ],
    ],
    character: [
      "Jungle 라이브러리 활용 - 실시간 오디오 신호 처리 및 3도 화음 생성 기능을 구현",
      "Tailwind CSS를 활용한 반응형 디자인으로 모바일부터 데스크탑까지 일관된 사용자 경험을 제공했습니다.",
      "실시간 오디오 처리를 위한 서버 통신 구현 - 지연 없는 음성 변조",
      "모바일 퍼스트",
    ],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_10: {
    id: 10,
    title: "스케쥴러",
    subTitle: "일정 관리 캘린더",
    type: "personal",
    stack: ["HTML", "CSS", "JavaScript", "Node.js", "MySQL"],
    exp: `일정을 확인하고 관리할 수 있는 스케쥴러입니다. 여행 관련 애플리케이션 제작에 활용하기위해 제작했습니다.`,
    img: imagePaths.project_10,
    function: [
      [
        "캘린더",
        "월별 캘린더에는 공휴일 및 각 날짜에 추가되어 있는 일정이 표시됩니다.",
      ],
      [
        "세부 일정 확인",
        "날짜를 클릭하면 해당 날짜의 세부 일정을 확인하고, 추가, 수정, 삭제할 수 있습니다.",
      ],
    ],
    character: [
      "MySQL을 활용하여 관계형 데이터베이스 기반의 일정 관리 시스템을 구축했습니다.",
      "CRUD 기능 구현 - 일정 추가, 조회, 수정, 삭제 기능",
      "클라이언트-서버 통신을 통해 일정 데이터를 효율적으로 관리하고 제공하는 시스템을 구현했습니다.",
    ],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
};

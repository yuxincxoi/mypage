export const projectStatics = {
  project_1: {
    id: 1,
    title: "I LIKE 짬뽕 ::: 짬뽕 지도",
    type: "personal",
    stack: ["React", "TypeScript", "Express.js", "TailwindCSS", "MongoDB"],
    exp: "I LIKE 짬뽕은 전국의 짬뽕 맛집을 쉽게 찾고, 나만의 맛집 리스트를 관리할 수 있는 웹 애플리케이션입니다. 사용자들은 지도를 활용하여 주변의 짬뽕집을 검색하고, 즐겨찾기 기능을 통해 자신만의 리스트를 만들어 관리할 수 있습니다.",
    function: [
      "🔍 짬뽕집 위치 검색: 카카오 지도 API를 활용한 지도 및 검색 기능을 활용하여 사용자가 원하는 지역의 짬뽕집을 쉽게 찾을 수 있습니다.",
      "❤️ 나의 장소 관리: 사용자가 관심 있는 짬뽕집을 나만의 리스트에 추가하고, 언제든지 다시 확인할 수 있습니다.",
      "🔐 회원관리: 계정을 생성하고 로그인하여 개인화된 정보를 안전하게 저장 및 관리할 수 있습니다.",
    ],
    character: [
      "⚡ React + TypeScript 기반으로 개발하여 유지보수성과 확장성을 고려한 구조",
      "🎨 Tailwind CSS 적용으로 반응형 디자인 및 깔끔한 UI 구현",
      "🚀 Express.js & MongoDB 사용하여 데이터 저장 및 관리",
      "🔗 카카오 지도 API 활용하여 직관적인 지도 검색 기능 제공",
      "🛠 Git 및 GitHub 활용하여 체계적인 버전 관리",
    ],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_2: {
    id: 2,
    title: "꿈 자판기 ::: mini ERP",
    type: "team",
    stack: [
      "HTML",
      "JavaScript",
      "TypeScript",
      "TailwindCSS",
      "Express.js",
      "SQLite3",
    ],
    exp: "사용자는 꿈 자판기에서 원하는 꿈을 구매하고, 관리자는 제품의 재고와 매출을 관리할 수 있도록 한 웹 애플리케이션입니다. 세상에 존재하지 않는 자판기를 주제로 만든 mini ERP 프로젝트입니다.",
    function: [
      "💰 입금하기: 꿈을 구매하기 위해 잔액을 충전합니다.",
      "🛒 구매하기: 장바구니에 원하는 꿈을 담아 구매할 수 있습니다.",
      "📦 재고관리: 관리자 페이지에서 제품을 조회하고, 추가, 수정, 삭제할 수 있습니다. ",
      "📊 매출관리: 인기 매출 제품과 총 매출 데이터를 확인할 수 있습니다",
      "담당기능: 구매하기 버튼 이벤트 관련 로직 처리 - 총액 계산 및 출력, 잔액 계산 및 저장, 잔액 출력",
      "담당기능: 초기 데이터베이스 구축",
    ],
    character: [
      "🏷️ 가상의 꿈 자판기 컨셉: 현실에는 없는 독창적인 ERP 시스템으로 색다른 사용자 경험 제공",
      "🛒 Mini ERP 시스템 구현: 구매, 재고 및 매출 관리를 포함한 소규모 ERP 기능 탑재",
      "⚡ React + TypeScript 기반 개발: 유지보수성과 안정성을 고려한 프론트엔드 구성 ",
      "🎨 Tailwind CSS 적용: 반응형 디자인을 활용한 깔끔하고 직관적인 UI 구현",
      "📊 관리자 대시보드: 제품 재고 및 매출 데이터를 시각적으로 확인 가능",
      "🛠 Node.js + Express 백엔드: RESTful API를 활용하여 클라이언트와의 원활한 데이터 통신",
      "🗄 MongoDB 활용: NoSQL 기반의 유연한 데이터 관리",
      "🔐 사용자 및 관리자 인증 시스템: 일반 사용자와 관리자를 분리하여 보안 강화",
    ],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment:
      "꿈 자판기라는 프로젝트를 처음으로 팀 단위로 작업을 진행해보게 되었다. 모두 같은 조건에 같은 글을 읽어도 그것을 이해하고 머릿속에 그려내는 바가 다 다르다는 점이 새삼 신기했다. 그런 덕분에 각자 가지고있는 수많은 아이디어를 내놓을수 있지 않았나 싶다. 우리는 나름의 설계를 했다. 해야할 일들을 이슈 단위로 나누어놓고 역할분담을 해서 작업을 시작했다. 하지만 항상 생각한 바대로 역시나 설계엔 끝이 없었다. 작업을 진행해가면서 설계의 부족으로 가장 불편했던 점들은 설계할 때에 팀원들과 작업이 겹치는 부분도 고려하지 못했다는 것과 요소들의 변수명, 함수와 그 기능, 받을 인자와 리턴값 정도는 정하고 진행을 했어야했는데라는 것이었다. 절대로 팀이 아니었다면 생각지도 못했을 것들이다. ‘이정도의 설계만 하고 진행했어도 순식간에 끝낼 수 있을 것 같은데’ 라는 생각을 많이 했던 것 같다. 남은 부분들을 진행하기에 앞서 이런 부분들을 보완하여 설계해서 작업을 진행해보고싶다.(진행중) 팀이어서 든든했고 팀이어서 성장할 수 있었던 것 같다.",
  },
  project_3: {
    id: 3,
    title: "크랩크랩 버거 ERP",
    type: "team",
    stack: ["Nest.js", "Nest.js", "TypeScript", "MongoDB", "TailwindCSS"],
    exp: "크랩크랩 버거는 '만약 스폰지밥 속 집게리아가 실제로 존재한다면?'이라는 발상에서 시작된 햄버거 구매 및 재고 관리 ERP 시스템입니다. 이 프로젝트는 mini 프로젝트 ‘꿈 자판기’를 기반으로 확장하여 제작했습니다.",
    function: [
      "🛒 사용자 페이지: 빵, 패티, 사이드, 음료를 직접 선택하여 맞춤형 햄버거를 주문할 수 있습니다.",
      "📦 재고 관리 페이지: 제품 정보를 수정하거나 제품 발주를 넣습니다.",
      "⏳ 유통기한 관리 페이지: 유통기한이 임박하거나 지난 제품을 확인하고 목록에서 폐기합니다.",
      "💰 매출 관리 페이지: 일별, 월별 매출 데이터를 확인합니다.",
      "👥 회원 관리 페이지: 회원 정보를 조회하고 권한을 설정합니다.",
      "📊 인사이트 페이지: 최다 방문자, 평균 체류 시간, 최다 발주 제품, 폐기 메뉴, 인기 메뉴 등의 통계를 확인할 수 있습니다.",
      "담당기능: 컴포넌트 제작 - input,로그인 정보, 사용자 네비게이션, 관리자 네비게이션",
      "담당기능: 사용자 페이지 제작 : 구매 및 구매 관련 재고처리 로직",
      "담당기능: 설계도 제작 - ERD, 메뉴 구조도",
      "담당기능: UI 설계 및 디자인",
      "담당기능: 초기 데이터베이스 구축",
      "담당기능: 초기 스키마 정의",
      "담당기능: 로고 제작",
    ],
    character: [
      "🍔 집게리아 컨셉을 ERP 시스템에 적용: 단순한 햄버거 주문 시스템이 아닌, ERP 기능을 결합하여 재고·매출·회원 관리까지 구현. 사용자 경험을 고려한 실제 운영 가능한 시스템 설계.",
      "🍳 커스텀 주문 시스템: 사용자들이 빵, 패티, 사이드, 음료를 직접 선택하여 햄버거를 주문할 수 있는 기능 제공. 실시간 재고 연동으로 품절된 제품을 자동 반영.",
      "🥛 유통기한 관리 기능: 유통기한이 지난 제품을 자동 폐기하여 현실적인 재고 관리 프로세스 구현. 재고 상태에 따라 폐기율 분석 가능.",
      "📊 매출 및 인사이트 분석: ERP 시스템답게, 최다 주문 제품, 평균 체류 시간, 최다 폐기 메뉴 등의 데이터를 시각적으로 제공. 데이터 기반의 비즈니스 인사이트 도출 가능.",
      "🔑 관리자 기능 강화: 회원 등급 관리 (일반 사용자 / 관리자). 메뉴 추가, 발주, 폐기, 수정 기능을 통한 전반적인 시스템 관리.",
      "🎨 실제 적용 가능한 설계 및 UI 디자인: ERD 설계, 메뉴 구조도 제작으로 체계적인 데이터 흐름 구현. TailwindCSS를 활용한 직관적이고 깔끔한 UI 구성.",
    ],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_4: {
    id: 4,
    title: "Eco Vision ::: 야생동물 모니터링 및 출몰 알림 서비스",
    type: "team",
    stack: [
      "Vue.js",
      "TypeScript",
      "TailwindCSS",
      "Python",
      "PyTorch",
      "Flask",
    ],
    exp: "AI 기반으로 실시간 야생동물 모니터링 및 출몰 알림을 제공하는 서비스입니다. 머신러닝을 활용해 야생동물의 종을 식별하고, 위해동물로 분류될 경우 해당 위치를 제보할 수 있습니다. 제보가 완료되면 해당 지역을 중심으로 위험 반경에 위치한 사용자들에게 출몰 알림을 전송합니다. 또한 실시간 데이터 분석을 통해 멸종위기종 및 야생동물 보호 연구에도 활용됩니다. 야생동물의 출몰이 빈번한 지역 및 피해 농가, 연구자들에게 실질적인 도움을 주기 위한 서비스를 목표로 개발했습니다.",
    function: [
      "📸 출몰 제보: 사진을 첨부하여 야생동물종을 식별합니다. 위해 동물로 분류가 되면 위치 제보 페이지로 바로 이동할 수 있습니다.",
      "📍 위치 제보: 출몰 지역의 키워드나 장소를 검색하면 해당 장소에 마커가 표시됩니다. 마커를 클릭하면 해당 장소를 중심으로한 위험 반경이 표시되고 제보하기 버튼이 활성화됩니다. 제보하기 버튼을 누르면 위험 반경 지역의 사용자들에게 알림이 전송됩니다. 기존 제보된 출몰 정보는 표 형태로 제공하여 출몰 현황을 쉽게 확인 가능합니다.",
      "📊 통계: 실시간 데이터 수집을 통해 야생동물 출몰 패턴 분석하고 멸종위기종 및 야생동물 보호 연구를 위한 데이터로 제공됩니다.",
      "담당기능: 위치 제보 페이지 제작 - 장소 검색 기능 구현, 지도에 장소 및 위험 반경 표시",
      "담당기능: 작업 개요서 작성",
      "담당기능: UI 설계 및 디자인",
    ],
    character: [
      "🌱 출몰 제보 페이지 제작 - 사진 첨부 및 동물종 식별 기능 구현",
      "📍 위치 제보 페이지 제작 - 장소 검색, 마커 표시 및 위험 반경 표시 기능 구현",
      "📊 통계 페이지 제작 - 멸종위기종 보호 및 연구 통계 제공",
      "🔧 머신러닝 모델 구현 - 야생동물 식별 및 위해 동물 분류 모델 개발 (PyTorch)",
      "🖥 프론트엔드 개발 - Vue.js, TypeScript, TailwindCSS 활용한 UI 구현",
      "⚙️ 백엔드 개발 - Flask를 활용한 API 설계 및 데이터 처리",
    ],
    troubleShooting: {
      trouble: "프로젝트 4: 이렇고 저런 문제가 있었습니다.",
      shooting:
        "프로젝트 4: 이렇고 저런 문제를 해결하기 위해 이런 방법들을 시도했습니다. 그래서 이러한 변화가 생겼습니다.",
      result:
        "프로젝트 4: 문제를 해결하면서 이런 점을 알게되었고 배우게 된 계기가 되었습니다.",
    },
    comment:
      "프로젝트 4: 회고입니다. 이 프로젝트를 통해 이러한 것들을 느꼈고 이렇고저렇습니다.",
  },
  project_5: {
    id: 5,
    title: "최유진의 포트폴리오 사이트",
    type: "personal",
    stack: ["React", "TypeScript", "TailwindCSS"],
    exp: "최유진의 포트폴리오 사이트입니다.",
    function: ["기능"],
    character: ["특징"],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_6: {
    id: 6,
    title: "프로젝트 6",
    type: "personal",
    stack: ["Angular", "MySQL", "Express.js"],
    exp: "프로젝트 6: 프로젝트 설명입니다. 이렇고저런 프로젝트이고 이렇고저래서 만들었습니다.",
    function: [
      "프로젝트 6: 기능 1에 대한 상세 설명을 여기에 작성합니다. 어떤 문제를 해결하고 어떤 가치를 제공하는지 설명합니다.",
      "프로젝트 6: 기능 2에 대한 상세 설명을 여기에 작성합니다. 어떤 문제를 해결하고 어떤 가치를 제공하는지 설명합니다.",
      "프로젝트 6: 기능 3에 대한 상세 설명을 여기에 작성합니다. 어떤 문제를 해결하고 어떤 가치를 제공하는지 설명합니다.",
    ],
    character: [
      "프로젝트 6: 특징 1에 대한 상세 설명을 여기에 작성합니다. 프로젝트의 독특한 점이나 혁신적인 부분을 강조합니다.",
      "프로젝트 6: 특징 2에 대한 상세 설명을 여기에 작성합니다. 프로젝트의 독특한 점이나 혁신적인 부분을 강조합니다.",
    ],
    troubleShooting: {
      trouble: "프로젝트 6: 이렇고 저런 문제가 있었습니다.",
      shooting:
        "프로젝트 6: 이렇고 저런 문제를 해결하기 위해 이런 방법들을 시도했습니다. 그래서 이러한 변화가 생겼습니다.",
      result:
        "프로젝트 6: 문제를 해결하면서 이런 점을 알게되었고 배우게 된 계기가 되었습니다.",
    },
    comment:
      "프로젝트 6: 회고입니다. 이 프로젝트를 통해 이러한 것들을 느꼈고 이렇고저렇습니다.",
  },
  project_7: {
    id: 7,
    title: "Cota ::: 코드 타자연습 게임",
    type: "personal",
    stack: ["HTML", "CSS", "JavaScript", "Express.js"],
    exp: "Cota는 코드 타자연습 게임으로, 주어진 코드를 빠르고 정확하게 입력하는 게임입니다. 이 게임을 통해 보다 빠른 작업 속도를 기르고, 새로운 프로그래밍 문법을 학습할 수 있습니다.",
    function: [
      "⏱️ 타이머: 게임이 시작되면 시간이 자동으로 카운트 됩니다.",
      "❤️ 하트: 게임이 시작되면 3개의 하트가 주어집니다. 코드와 다르게 입력할 때마다 하트 하나가 사라집니다.",
      "🏆 점수: 주어진 시간 내에 코드를 입력하지 못하면 점수가 차감됩니다.",
      "💀 게임 끝: 하트가 모두 사라지거나, 점수가 0점이 되면 게임이 끝납니다.",
    ],
    character: ["특징"],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_8: {
    id: 8,
    title: "Chord Clip ::: 3도화음 가이드",
    type: "personal",
    stack: ["React", "TypeScript", "TailwindCSS"],
    exp: "Chord Clip은 사용자가 노래를 녹음하고, 그것을 기준으로 3도 위의 음을 생성하여 재생하는 웹 애플리케이션입니다. 3도 화음의 가이드가 되어 화음 연습에 도움이 되고자 만들었습니다.",
    function: [
      "🎙 녹음: 사용자가 노래를 녹음합니다.",
      "🎼 3도 화음 가이드 생성: 녹음된 음을 1도음으로 설정하여 이에 맞는 3도 위의 음을 생성합니다.",
      "🔊 재생: 생성된 3도 위의 음을 재생합니다.",
      "💾 음원 저장: 생성된 음원을 m4a 파일로 다운로드합니다.",
    ],
    character: [
      "⚡ React + TypeScript 기반으로 개발하여 유지보수성과 확장성을 고려한 구조",
      "🎨 Tailwind CSS 적용으로 반응형 디자인 및 깔끔한 UI 구현",
      "🎵 Jungle JS 활용하여 실시간 오디오 신호 처리",
      "📂 m4a 파일 저장 기능을 제공하여 음원을 쉽게 다운로드 가능",
      "🛠 Git 및 GitHub 활용하여 체계적인 버전 관리",
    ],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_9: {
    id: 9,
    title: "Tone-deaf mic ::: 음치 마이크",
    type: "personal",
    stack: ["Next.js", "TypeScript", "TailwindCSS"],
    exp: "Tone-deaf Mic는 음성 변조 기능을 활용한 마이크입니다. 이 마이크로 노래를 하면 누구든 음치가 될 수 있습니다!",
    function: [
      "🔌 전원 on/off 기능: 마이크의 전원을 켜고 끌 수 있는 기능을 제공합니다.",
      "🎶 피치 조절 기능: 목소리의 피치를 조절하여 음성 변조 효과를 제공합니다.",
    ],
    character: ["특징"],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_10: {
    id: 10,
    title: "스케쥴러",
    type: "personal",
    stack: ["HTML", "CSS", "JavaScript", "Node.js", "MySQL"],
    exp: "여행 플래너의 일부로 활용될 일정 관리 애플리케이션입니다. 일정을 시간 단위로 관리하고, 하루하루의 일정을 한눈에 확인할 수 있습니다.",
    function: [
      "📅 월별 캘린더: 이전, 다음 달로 이동할 수 있는 캘린더 기능을 제공합니다.",
      "🗓️ 일정 표시: 캘린더에는 각 날짜에 추가되어 있는 일정이 표시됩니다.",
      "📝 일정 확인 및 추가, 수정, 삭제: 날짜를 클릭하면 해당 날짜의 일정 관리 모달이 표시됩니다. 모달에서 해당 날짜의 일정을 확인, 추가, 수정, 삭제할 수 있습니다.",
    ],
    character: ["특징"],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
};

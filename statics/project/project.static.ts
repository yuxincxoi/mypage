export const projectStatics = {
  project_1: {
    id: 1,
    title: "I LIKE 짬뽕 ::: 짬뽕 지도",
    type: "personal",
    stack: ["React", "TypeScript", "Express.js", "TailwindCSS", "MongoDB"],
    exp: "I LIKE 짬뽕은 사용자가 짬뽕집을 지도에서 쉽게 찾고, 나만의 장소 목록에 추가하여 관리할 수 있는 웹 애플리케이션입니다.",
    function: [
      "짬뽕집 위치 검색: 지도에서 짬뽕집의 위치를 검색하고, 해당 위치를 지도에서 확인할 수 있습니다.",
      "나의 장소 관리: 나만의 짬뽕집을 저장하고 언제든지 확인할 수 있습니다.",
      "회원관리: 계정을 생성하여 개인화된 정보를 안전하게 관리할 수 있습니다.",
    ],
    character: ["특징"],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_2: {
    id: 2,
    title: "꿈 자판기 ::: mini ERP",
    type: "team",
    stack: [
      "HTML",
      "JavaScript",
      "TypeScript",
      "TailwindCSS",
      "Express.js",
      "SQLite3",
    ],
    exp: "꿈을 판매합니다 ! 자고있는 무의식 속 당신은 어떤 꿈을 꾸고있나요 ? 세상에 존재하지 않는 자판기를 주제로 만든 mini ERP 프로젝트입니다.",
    function: [
      "입금 후 구매하고 싶은 꿈을 장바구니에 담아 구매하세요. 관리자 페이지에서는 제품의 재고와 매출을 관리할 수 있습니다.",
      "입금하기",
      "구매하기 - 장바구니, 구매",
      "재고관리 - 제품 조회, 추가, 수정, 삭제",
      "매출관리 - 인기매출제품 조회, 총 매출 조회",
    ],
    character: [
      "담당기능: 구매하기 버튼 이벤트 관련 로직 처리 - 총액 계산 및 출력, 잔액 계산 및 저장, 잔액 출력",
      "담당기능: 초기 데이터베이스 구축",
    ],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment:
      "꿈 자판기라는 프로젝트를 처음으로 팀 단위로 작업을 진행해보게 되었다. 모두 같은 조건에 같은 글을 읽어도 그것을 이해하고 머릿속에 그려내는 바가 다 다르다는 점이 새삼 신기했다. 그런 덕분에 각자 가지고있는 수많은 아이디어를 내놓을수 있지 않았나 싶다. 우리는 나름의 설계를 했다. 해야할 일들을 이슈 단위로 나누어놓고 역할분담을 해서 작업을 시작했다. 하지만 항상 생각한 바대로 역시나 설계엔 끝이 없었다. 작업을 진행해가면서 설계의 부족으로 가장 불편했던 점들은 설계할 때에 팀원들과 작업이 겹치는 부분도 고려하지 못했다는 것과 요소들의 변수명, 함수와 그 기능, 받을 인자와 리턴값 정도는 정하고 진행을 했어야했는데라는 것이었다. 절대로 팀이 아니었다면 생각지도 못했을 것들이다. ‘이정도의 설계만 하고 진행했어도 순식간에 끝낼 수 있을 것 같은데’ 라는 생각을 많이 했던 것 같다. 남은 부분들을 진행하기에 앞서 이런 부분들을 보완하여 설계해서 작업을 진행해보고싶다.(진행중) 팀이어서 든든했고 팀이어서 성장할 수 있었던 것 같다.",
  },
  project_3: {
    id: 3,
    title: "크랩크랩 버거 ERP",
    type: "team",
    stack: ["Nest.js", "Nest.js", "TypeScript", "MongoDB", "TailwindCSS"],
    exp: "스폰지밥 속 집게리아가 현재 실제로 존재한다면 어떤 모습일까요 ? ERP 프로젝트로 진행한 햄버거 구매 및 재고관리 프로젝트 입니다. mini 프로젝트인 꿈 자판기를 기반으로 하여 제작했습니다.",
    function: [
      "크랩크랩 버거를 직접 커스텀하여 주문하세요. 관리자 계정으로 로그인하면 재고관리, 매출관리, 회원관리, 인사이트를 확인할 수 있습니다.",
      "사용자 페이지 : 빵과 패티, 사이드, 음료 커스텀 주문",
      "재고관리 페이지 : 제품 정보 수정, 제품 발주",
      "유통기한관리 페이지 : 유통기한에 따른 제품 폐기",
      "매출관리 페이지 : 매출 정보 조회",
      "회원관리 페이지 : 회원 정보 조회 및 회원 권한 설정",
      "인사이트 페이지 : 최다 방문자, 사용자 평균 체류 시간, 최다 발주, 최다 폐기 메뉴, 최다 주문 내역, 최소 주문 내역, 신메뉴 주문량 조회",
    ],
    character: [
      "담당기능: 컴포넌트 제작 - input,로그인 정보, 사용자 네비게이션, 관리자 네비게이션",
      "담당기능: 사용자 페이지 제작 : 구매 및 구매 관련 재고처리 로직",
      "담당기능: 설계도 제작 - ERD, 메뉴 구조도",
      "담당기능: UI 설계 및 디자인",
      "담당기능: 초기 데이터베이스 구축",
      "담당기능: 초기 스키마 정의",
      "담당기능: 로고 제작",
    ],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_4: {
    id: 4,
    title: "Eco Vision ::: 야생동물 모니터링 및 출몰 알림 서비스",
    type: "team",
    stack: [
      "Vue.js",
      "TypeScript",
      "TailwindCSS",
      "Python",
      "PyTorch",
      "Flask",
    ],
    exp: "머신러닝 프로젝트로 진행한 야생동물 모니터링 및 출몰 알림 서비스 입니다.",
    function: [
      "출몰 제보 - 사진을 첨부하여 야생동물종을 식별합니다. 위해 동물로 분류가 되면 위치 제보 페이지로 바로 이동할 수 있습니다.",
      "위치 제보 - 출몰 지역의 키워드나 장소를 검색하면 해당 장소에 마커가 표시됩니다. 마커에 마우스를 올리면 해당 장소의 정보가 표시됩니다. 마커를 클릭하면 해당 장소를 중심으로한 위험 반경이 표시되고 제보하기 버튼이 활성화됩니다. 제보하기 버튼을 누르면 위험 반경 지역의 사용자들에게 알림이 전송됩니다. 검색한 장소 주변에 이미 제보가 된 정보들이 아래의 표로 표시됩니다.",
      "통계 : 멸종위기종 및 야생동물종 보호를 위한 연구에 활용",
    ],
    character: [
      "담당기능: 위치 제보 페이지 제작 - 장소 검색 기능 구현, 지도에 장소 및 위험 반경 표시",
      "담당기능: 작업 개요서 작성",
      "담당기능: UI 설계 및 디자인",
    ],
    troubleShooting: {
      trouble: "프로젝트 4: 이렇고 저런 문제가 있었습니다.",
      shooting:
        "프로젝트 4: 이렇고 저런 문제를 해결하기 위해 이런 방법들을 시도했습니다. 그래서 이러한 변화가 생겼습니다.",
      result:
        "프로젝트 4: 문제를 해결하면서 이런 점을 알게되었고 배우게 된 계기가 되었습니다.",
    },
    comment:
      "프로젝트 4: 회고입니다. 이 프로젝트를 통해 이러한 것들을 느꼈고 이렇고저렇습니다.",
  },
  project_5: {
    id: 5,
    title: "최유진의 포트폴리오 사이트",
    type: "personal",
    stack: ["React", "TypeScript", "TailwindCSS"],
    exp: "최유진의 포트폴리오 사이트입니다.",
    function: ["기능"],
    character: ["특징"],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_6: {
    id: 6,
    title: "프로젝트 6",
    type: "personal",
    stack: ["Angular", "MySQL", "Express.js"],
    exp: "프로젝트 6: 프로젝트 설명입니다. 이렇고저런 프로젝트이고 이렇고저래서 만들었습니다.",
    function: [
      "프로젝트 6: 기능 1에 대한 상세 설명을 여기에 작성합니다. 어떤 문제를 해결하고 어떤 가치를 제공하는지 설명합니다.",
      "프로젝트 6: 기능 2에 대한 상세 설명을 여기에 작성합니다. 어떤 문제를 해결하고 어떤 가치를 제공하는지 설명합니다.",
      "프로젝트 6: 기능 3에 대한 상세 설명을 여기에 작성합니다. 어떤 문제를 해결하고 어떤 가치를 제공하는지 설명합니다.",
    ],
    character: [
      "프로젝트 6: 특징 1에 대한 상세 설명을 여기에 작성합니다. 프로젝트의 독특한 점이나 혁신적인 부분을 강조합니다.",
      "프로젝트 6: 특징 2에 대한 상세 설명을 여기에 작성합니다. 프로젝트의 독특한 점이나 혁신적인 부분을 강조합니다.",
    ],
    troubleShooting: {
      trouble: "프로젝트 6: 이렇고 저런 문제가 있었습니다.",
      shooting:
        "프로젝트 6: 이렇고 저런 문제를 해결하기 위해 이런 방법들을 시도했습니다. 그래서 이러한 변화가 생겼습니다.",
      result:
        "프로젝트 6: 문제를 해결하면서 이런 점을 알게되었고 배우게 된 계기가 되었습니다.",
    },
    comment:
      "프로젝트 6: 회고입니다. 이 프로젝트를 통해 이러한 것들을 느꼈고 이렇고저렇습니다.",
  },
  project_7: {
    id: 7,
    title: "Cota ::: 코드 타자연습 게임",
    type: "personal",
    stack: ["HTML", "CSS", "JavaScript", "Express.js"],
    exp: "코드 타자연습 게임입니다. 보다 빠른 작업 속도에 기여하고 새로운 문법을 학습할 수 있습니다.",
    function: [
      "게임 시작: 주어진 코드를 보고 입력합니다.",
      "타이머: 게임이 시작되면 시간이 자동으로 카운트 됩니다. 주어진 시간 안에 문장을 입력해야합니다.",
      "하트: 게임이 시작되면 3개의 하트가 주어집니다. 코드와 다르게 입력되면 하트 한 개가 사라집니다.",
      "점수: 시간 내에 입력하지 못하면 점수가 차감됩니다.",
      "게임 끝: 0점이 되거나, 하트가 모두 사라지면 게임이 끝납니다.",
    ],
    character: ["특징"],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_8: {
    id: 8,
    title: "Chord Clip ::: 3도화음 가이드",
    type: "personal",
    stack: ["React", "TypeScript", "TailwindCSS"],
    exp: "Chord Clip는 사용자가 노래를 녹음하고, 그것을 기준으로 3도 위의 음을 생성하여 재생하는 웹 애플리케이션입니다. 3도 화음의 가이드가 되어 화음 연습에 도움이 되고자 만들었습니다.",
    function: [
      "녹음: 사용자가 노래를 녹음합니다.",
      "3도 화음 가이드 생성: 녹음된 음을 1도음으로 설정하여 이에 맞는 3도 위의 음을 생성합니다.",
      "재생: 생성된 3도 위의 음을 재생합니다.",
      "음원 저장: 생성된 음원을 m4a 파일로 다운로드합니다.",
    ],
    character: ["특징"],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_9: {
    id: 9,
    title: "Tone-deaf mic ::: 음치 마이크",
    type: "personal",
    stack: ["Next.js", "TypeScript", "TailwindCSS"],
    exp: "이 애플리케이션을 사용하여 노래를 하면 누구든지 음치가 될 수 있습니다 !",
    function: [
      "마이크를 on/off 합니다.",
      "저음역대부터 고음역대까지 자유롭게 조절하여 음성을 변조할 수 있습니다.",
    ],
    character: ["특징"],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
  project_10: {
    id: 10,
    title: "스케쥴러",
    type: "personal",
    stack: ["HTML", "CSS", "JavaScript", "Node.js", "MySQL"],
    exp: "일정을 관리할 수 있는 스케쥴러입니다.",
    function: [
      "월별 캘린더: 이전, 다음 달로 이동할 수 있는 캘린더 기능을 제공합니다.",
      "일정 표시: 캘린더에는 각 날짜에 추가되어있는 일정이 표시됩니다.",
      "일정 확인 및 추가, 수정, 삭제: 날짜를 클릭하면 해당 날짜의 일정 관리 모달이 표시됩니다. 모달에서 해당 날짜의 일정을 확인, 추가, 수정, 삭제할 수 있습니다.",
    ],
    character: ["특징"],
    troubleShooting: {
      trouble: "이슈",
      shooting: "해결방법",
      result: "결과",
    },
    comment: "회고입니다.",
  },
};
